name: Publish new release

on:
  push:
    branches: [ "main" ]  
    
env:
  PROJECT_PATH: src/SecureElementReader.App/SecureElementReader.App.csproj

jobs:
  deploy:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 6.0.x
      
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.13
        with:
          versionSpec: '5.x'

      - name: Determine Version
        id:   gitversion
        uses: gittools/actions/gitversion/execute@v0.9.13
        with:
          useConfigFile: true
          configFilePath: .github/workflows/GitVersion.yml

      - name: Restore project 
        run: dotnet restore ${{ env.PROJECT_PATH }}

      - name: Build project 
        run: dotnet build ${{ env.PROJECT_PATH }} -c Release --no-restore

      - name: Publish project 
        run: dotnet publish ${{ env.PROJECT_PATH }} -c Release -r win-x64 -p:PublishSingleFile=true -p:AssemblyVersion=${{ steps.gitversion.outputs.semVer }}

      - name: Zip Files
        uses: vimtor/action-zip@v1
        with:   
          files: src/SecureElementReader.App/bin/Release/net6.0/win-x64/publish/
          dest: ${{ steps.gitversion.outputs.semVer }}.zip
    
      #- name: Zip Release  
      #  uses: TheDoctor0/zip-release@0.6.2
      #  with:
      #    filename: ${{ steps.gitversion.outputs.semVer }}.zip
      #    path: src/SecureElementReader.App/bin/Release/net6.0/win-x64/publish/

      #- name: Upload a Build Artifact win-x64
      #  uses: actions/upload-artifact@v3.1.0
      #  with: 
      #    name: win-x64
      #    path: src/SecureElementReader.App/bin/Release/net6.0/win-x64/publish/*
      
      - name: Create Tag     
        uses: Yanjingzhu/FirstJSAction@v1.3
        with:            
          tag: ${{ steps.gitversion.outputs.semVer }}         
          message: ${{ steps.gitversion.outputs.semVer }}
          commit: ${{ steps.gitversion.outputs.Sha }}
          token: ${{ secrets.GITHUB_TOKEN }}
    
      - name: Create release 
        uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.gitversion.outputs.semVer }}
          release_name: ${{ steps.gitversion.outputs.semVer }}

      - name: Publish release 
        uses: csexton/release-asset-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          pattern: ${{ steps.gitversion.outputs.semVer }}.zip
          release-url: ${{ steps.create_release.outputs.upload_url }}
