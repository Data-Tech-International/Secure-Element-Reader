<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="About" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="AboutHeader" xml:space="preserve">
    <value>_About</value>
  </data>
  <data name="ApiUrl" xml:space="preserve">
    <value>API URL:</value>
  </data>
  <data name="CardReaderName" xml:space="preserve">
    <value>Card Reader Name</value>
  </data>
  <data name="CertificateType" xml:space="preserve">
    <value>Certificate Type:</value>
  </data>
  <data name="ChangeLang" xml:space="preserve">
    <value>Please restart application to view changes</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="CommonName" xml:space="preserve">
    <value>Common Name:</value>
  </data>
  <data name="Details" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="EnterPIN" xml:space="preserve">
    <value>Enter PIN here</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="ExitHeader" xml:space="preserve">
    <value>_Exit</value>
  </data>
  <data name="ExpiryDate" xml:space="preserve">
    <value>Expiry Date:</value>
  </data>
  <data name="FailedToReadPkiData" xml:space="preserve">
    <value>Failed to read PKI data with error</value>
  </data>
  <data name="FailedToReadSeData" xml:space="preserve">
    <value>Failed to read SE data with error</value>
  </data>
  <data name="FileHeader" xml:space="preserve">
    <value>_File</value>
  </data>
  <data name="GetCert" xml:space="preserve">
    <value>Get Certificate</value>
  </data>
  <data name="GetPkiCertError" xml:space="preserve">
    <value>Get PKI cert error</value>
  </data>
  <data name="GetReader" xml:space="preserve">
    <value>Get Reader</value>
  </data>
  <data name="GetSeCertError" xml:space="preserve">
    <value>Get SE cert error</value>
  </data>
  <data name="GivenName" xml:space="preserve">
    <value>Given Name:</value>
  </data>
  <data name="HelpHeader" xml:space="preserve">
    <value>_Help</value>
  </data>
  <data name="Info" xml:space="preserve">
    <value>Change languages</value>
  </data>
  <data name="IssuerName" xml:space="preserve">
    <value>Issuer Name:</value>
  </data>
  <data name="Loading" xml:space="preserve">
    <value>Loading...</value>
  </data>
  <data name="NoCardReadesFounded" xml:space="preserve">
    <value>No card readers found!</value>
  </data>
  <data name="Organization" xml:space="preserve">
    <value>Taxpayer:</value>
  </data>
  <data name="OrganizationUnit" xml:space="preserve">
    <value>Business location:</value>
  </data>
  <data name="PinMustBe4char" xml:space="preserve">
    <value>Pin must be 4 characters length.</value>
  </data>
  <data name="PkiAppletLocked" xml:space="preserve">
    <value>PKI applet is LOCKED</value>
  </data>
  <data name="PkiCertDetailsError" xml:space="preserve">
    <value>PKI cert details error</value>
  </data>
  <data name="PkiCertInvalid" xml:space="preserve">
    <value>PKI cert is invalid</value>
  </data>
  <data name="PkiCertValid" xml:space="preserve">
    <value>PKI cert is valid</value>
  </data>
  <data name="PkiPinOK" xml:space="preserve">
    <value>PKI pin is OK</value>
  </data>
  <data name="PkiPinWrong" xml:space="preserve">
    <value>PKI pin is WRONG, you have [xxx] tries left</value>
  </data>
  <data name="PleaseInseretCard" xml:space="preserve">
    <value>Please insert a card</value>
  </data>
  <data name="PleaseInsertPIN" xml:space="preserve">
    <value>Please enter PIN code</value>
  </data>
  <data name="RequestedBy" xml:space="preserve">
    <value>Requested By:</value>
  </data>
  <data name="ReturnCard" xml:space="preserve">
    <value>Please return the card to the tax authority.</value>
  </data>
  <data name="SeAppletLocked" xml:space="preserve">
    <value>SE applet is LOCKED</value>
  </data>
  <data name="SeCertDetailsError" xml:space="preserve">
    <value>SE cert details error</value>
  </data>
  <data name="SeCertInvalid" xml:space="preserve">
    <value>SE cert is invalid</value>
  </data>
  <data name="SeCertValid" xml:space="preserve">
    <value>SE cert is valid</value>
  </data>
  <data name="SelectPkiError" xml:space="preserve">
    <value>Select PKI app error</value>
  </data>
  <data name="SelectSeError" xml:space="preserve">
    <value>Select SE app error</value>
  </data>
  <data name="SePinOK" xml:space="preserve">
    <value>SE pin is OK</value>
  </data>
  <data name="SePinWrong" xml:space="preserve">
    <value>SE pin is WRONG</value>
  </data>
  <data name="SmartCardReader" xml:space="preserve">
    <value>Smart Card Reader</value>
  </data>
  <data name="State" xml:space="preserve">
    <value>State:</value>
  </data>
  <data name="StreetAddress" xml:space="preserve">
    <value>Street Address:</value>
  </data>
  <data name="Subject" xml:space="preserve">
    <value>Subject:</value>
  </data>
  <data name="Support" xml:space="preserve">
    <value>Support:</value>
  </data>
  <data name="SurName" xml:space="preserve">
    <value>Surname:</value>
  </data>
  <data name="Tin" xml:space="preserve">
    <value>TIN:</value>
  </data>
  <data name="UniqueIdentifier" xml:space="preserve">
    <value>UID:</value>
  </data>
  <data name="VerficationDetails" xml:space="preserve">
    <value>Verfication Details</value>
  </data>
  <data name="Verify" xml:space="preserve">
    <value>Verify</value>
  </data>
  <data name="VerifyPin" xml:space="preserve">
    <value>Verify Pin</value>
  </data>
  <data name="Version" xml:space="preserve">
    <value>Version:</value>
  </data>
  <data name="Welcome" xml:space="preserve">
    <value>Secure Element Reader</value>
  </data>
</root>